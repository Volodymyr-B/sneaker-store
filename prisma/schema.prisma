generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id String @id @default(cuid())
  name String @unique
  description String
  gender String[]
  type String
  subType String
  sport String
  isSale Boolean @default(false)
  isArchived Boolean @default(false)
  price Int 
  discount Int @default(0)
  quantities Quantity[] @relation("QuantityToProduct")
  comments Comment[] @relation("CommentToProduct")
  orderItems  OrderItem[] @relation("OrderItemToProduct")
  cover String
  images String[]
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
}

model Quantity{
  id String @id @default(cuid())
  productId String
  product Product @relation("QuantityToProduct",fields: [productId],references: [id])
  size String
  orderItems OrderItem[] @relation("OrderItemToQuantity")
  quantity Int
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
}

model Comment{
  id String @id @default(cuid())
  productId String
  product Product @relation("CommentToProduct",fields: [productId],references: [id])
  userEmail String
  userName String
  user User @relation("CommentToUser",fields: [userEmail,userName],references: [eMail,name])
  body String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User {
  id String @id @default(cuid())
  name String @unique
  eMail String @unique
  password String
  comments Comment[] @relation("CommentToUser")
  orders Order[] @relation("OrderToUser")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  @@unique([eMail, name])
}
model Order {
  id String @id @default(cuid())
  firstName String
  lastName String
  deliveryAddress String
  phone String
  email String
  buyerId String?
  buyer User? @relation("OrderToUser",fields: [buyerId],references: [id])
  totalPrice Int
  orderItems OrderItem[] @relation("OrderItemToOrder")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model OrderItem {
  id String @id @default(cuid())
  size String
  amount Int
  productName String
  productImage String
  quantityId   String  
  quantity  Quantity  @relation("OrderItemToQuantity",fields: [quantityId], references: [id])
  orderId   String  
  order     Order   @relation("OrderItemToOrder",fields: [orderId], references: [id])
  productId String  
  product   Product @relation("OrderItemToProduct",fields: [productId], references: [id])
}

model SubType {
  id String @id @default(cuid())
  name String 
  uniqueName String @unique 
  typeName String 
  type Type @relation("SubTypeToType",fields: [typeName],references: [uniqueName])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Type {
  id String @id @default(cuid())
  name String 
  uniqueName String @unique 
  variants SubType[] @relation("SubTypeToType")
  categoryName String
  category Category @relation("TypeToCategory",fields: [categoryName],references: [name])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Category {
  id String @id @default(cuid())
  name String  @unique
  types Type[] @relation("TypeToCategory")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Sport {
  id String @id @default(cuid())
  name String @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}


